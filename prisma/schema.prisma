generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  password      String?
  image         String?
  accounts      Account[]
  sessions      Session[]
  books         Book[]
  comments      Comment[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime

  user User @relation(fields: [userId], references: [id])
}

model Book {
  id          String   @id @default(cuid())
  title       String
  author      String
  description String?
  user        User     @relation(fields: [userId], references: [id])
  userId      String

  image       Image?   @relation("BookImage")
  imageId     String?  @unique 

  comments    Comment[]
  createdAt   DateTime @default(now())
}

model Image {
  id        String   @id @default(uuid())
  url       String
  path      String
  mimetype  String
  filename  String
  createdAt DateTime @default(now())

  book      Book?    @relation("BookImage", fields: [bookId], references: [id])
  bookId    String?  @unique
}

model Comment {
  id        String   @id @default(cuid())
  content   String
  book      Book     @relation(fields: [bookId], references: [id])
  bookId    String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  createdAt DateTime @default(now())
}
